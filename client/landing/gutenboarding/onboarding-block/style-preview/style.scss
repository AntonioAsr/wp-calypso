@import '../../mixins.scss';
@import '../../variables.scss';

.style-preview__header {
	display: grid;
	grid-template-areas: 'title viewport-select actions';
	column-gap: 1em;
	align-items: center;
	@include onboarding-heading-padding;
}

.style-preview__content {
	display: grid;
	grid-template-areas: 'fonts preview';
	grid-template-columns: 163px auto;
	column-gap: 100px;
}

.style-preview__titles {
	grid-area: title;
}

.style-preview__viewport-select {
	grid-area: viewport-select;
}

.style-preview__actions {
	grid-area: actions;
	justify-self: end;

	a.is-link {
		@include onboarding-medium-text;
		margin: 0 1em;
		color: var( --studio-gray-40 );
	}

	&-continue-button.is-primary.is-large {
		padding: 0 40px;
	}
}

.style-preview__font-options {
	grid-area: fonts;
	display: grid;
	grid-template-columns: 100%;
	row-gap: 1em;
	align-self: start;
}

.style-preview__font-option {
	min-height: 3.4em;
	box-shadow: inset 0 0 0 1px var( --studio-gray-10 );

	display: flex;
	flex-direction: column;
	justify-content: space-around;
	align-content: center;

	// Extra specificity to override core style
	// This is effectively a more-specific synonmy of the same selector
	&.components-button {
		color: var( --studio-gray-90 );
		height: auto;
		border-radius: 2px;
	}

	&.is-selected {
		// override default focus and hover styles for selected-fonts buttons
		// `!important` is used because there are default `focus` and `hover` styles with high specificities.
		color: var( --studio-blue-40 ) !important;
		box-shadow: inset 0 0 0 1px var( --studio-blue-40 ) !important;
	}

	&:hover {
		box-shadow: inset 0 0 0 1px var( --studio-gray-90 );
	}
}

.style-preview__font-option {
	display: flex;
}

.style-preview__preview {
	position: relative;

	&::before {
		content: '';
		position: absolute;
		color: var( --studio-gray-10 );
		width: 90px;
		height: 30px;
		background-image: url( "data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='90' height='30' viewbox='0 0 30 90' fill='%23dcdcde'%3E%3Ccircle cy='15' cx='15' r='3'/%3E%3Ccircle cy='15' cx='25' r='3'/%3E%3Ccircle cy='15' cx='35' r='3'/%3E%3C/svg%3E" );
	}

	&.is-viewport-mobile,
	&.is-viewport-tablet {
		&::before {
			content: none;
		}
	}
}
.style-preview__preview-iframe-container {
	grid-area: preview;
	margin: 0 auto;
	background: var( --studio-white );
	box-shadow: 0 0 0 1px var( --studio-gray-5 ), 0 4px 14px rgba( 0, 0, 0, 0.25 );
	overflow: hidden;
	width: 100%;
	height: 700px;
	border-color: var( --studio-white );
	border-style: solid;
	box-sizing: border-box;

	.is-viewport-mobile &,
	.is-viewport-tablet & {
		box-shadow: 0 0 0 1px var( --studio-gray-5 ), 0 4px 14px rgba( 0, 0, 0, 0.14 );
	}
}

$gutenboarding-style-preview-bar-height: 30px;

// This and the following dot class render the browser chrome
.style-preview__preview-bar {
	width: 100%;
	height: $gutenboarding-style-preview-bar-height;
	background: var( --studio-white );
	border-bottom: 1px solid var( --studio-gray-5 );
	display: flex;
	flex-direction: row;
	align-items: center;
	padding: 10px;
}

.style-preview__preview-bar-dot {
	background: var( --studio-gray-5 );
	width: 6px;
	height: 6px;
	border-radius: 50%;
	margin: 0 2px;
}

.style-preview__viewport-select {
	display: flex;
	justify-content: center;

	.components-button {
		padding: 4px;

		height: auto;

		svg {
			fill: none;
		}

		color: var( --studio-gray-10 );

		&.is-selected {
			color: var( --studio-black );
		}
	}
}

.style-preview__iframe {
	$scale-factor: 0.7;
	// Extra specificify to override editor ifram styles
	.style-preview__preview & {
		width: 100% / $scale-factor;
		height: 100% / $scale-factor;
	}

	transform: scale( $scale-factor );
	transform-origin: 0 0;
}
